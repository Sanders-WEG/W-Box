#!/bin/bash

load_desk() {
if ps aux | grep -v grep | grep -q "wine"
then
exit
else
rm -rf ~/.cache/*
function stop-all {
	pkill -f "app_process / com.termux.x11"
	rm -rf $PREFIX/tmp/pulse-*
	pulseaudio -k &>/dev/null
	unset PULSE_SERVER
	pkill pulseaudio
	rm -rf $PREFIX/tmp/.virgl_test &>/dev/null
	pkill virgl
	rm -rf $PREFIX/tmp/.virgl_test &>/dev/null
}
stop-all
for file in "$HOME/.shortcuts/"*; do
[ -f "$file" ] || continue
filename="$(basename "$file")"
target_file=$(find "$HOME/Desktop" -type f -name "$filename.lnk")
adres=$(strings "$target_file" | grep -o -m 1 '[A-Za-z]:\\.*\.exe' | sed 's|\\|/|g')
adres="${adres:2}"
word=$(strings "$target_file" | grep -o -m 1 '[A-Za-z]:\\.*\.exe')
disk_letter=$(echo "$word" | cut -d ':' -f 1)
    if [ "$disk_letter" == "D" ]; then
        new_path="$HOME/storage/downloads/$adres"
        if [ ! -f "$new_path" ]; then
            if [ -f "$target_file" ]; then
                rm "$target_file"
            fi
        fi
    elif [ "$disk_letter" == "Z" ]; then
        new_path="/data/data/com.termux/files/$adres"
        if [ ! -f "$new_path" ]; then
            if [ -f "$target_file" ]; then
                rm "$target_file"
            fi
        fi
elif [ "$disk_letter" == "C" ]; then
    ADRES_C=$(sed -n '5p' "$file" | awk '{gsub(/^.{9}/,""); gsub(/.$/,"")}1')
    vers_box=$(sed -n '217p' "$file" | cut -c 8-)
    if [ -d "$PREFIX/glibc-x86" ]; then
        WINE_ST="WOW64"
    elif [ -d "$PREFIX/glibc-wow64" ]; then
        WINE_ST="X86"
    fi
    if [ "$vers_box" == "$WINE_ST" ]; then
        new_path="$PREFIX/glibc/$ADRES_C$adres"
    else
        if [ -d "$PREFIX/glibc-wow64" ]; then
            new_path="$PREFIX/glibc-wow64/$ADRES_C$adres"
        else
            new_path="$PREFIX/glibc-x86/$ADRES_C$adres"
        fi
    fi
    if [ ! -f "$new_path" ]; then
        if [ -n "$target_file" ] && [ -f "$target_file" ]; then
            rm "$target_file"
        fi
    fi
fi
done
CONFIG_DIR="$HOME/.shortcuts/,/Mobox box86"
export CONFIG_DIR
BASE_DIR=$(cat "$PREFIX/bin/widget/directory")
hom_64="$HOME/.shortcuts/,/Mobox WoW64"
hom_86="$HOME/.shortcuts/,/Mobox box86"
hud="$PREFIX/glibc/opt/conf/hud.conf"
pulseaudio --start --load="module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1" --exit-idle-time=-1
termux-x11 :0 &>/dev/null &
if [ "$InBr_eng" = "Enable" ]; then
am start -n com.catfixture.inputbridge/com.catfixture.inputbridge.ui.activity.main.MainActivity &>/dev/null
am start --user 0 com.termux.x11/.MainActivity &>/dev/null
else
am start --user 0 com.termux.x11/.MainActivity &>/dev/null
sleep 0.2
am start --user 0 com.termux.x11/.MainActivity &>/dev/null
fi
export ORIGINAL_FILE=$HOME/Desktop/$GAME
file_path="$PREFIX/glibc/opt/scripts/mobox_menu"
value=$(grep 'Mobox' "$file_path" | sed -E 's/.*Mobox([^"]*).*/\1/')
if [ "$BOX_VERS" == "X86" ]; then
    if [ "$OpenGL_86_eng" == "Enable" ]; then
        export LIBGL_DRI3=0
    else
        export LIBGL_DRI3=1
    fi
DXVK_FILE_86="$BASE_DIR/drivers/render/$DXVK_86"
TURNIP_FILE_86="$BASE_DIR/drivers/driver_x86/$TURNIP_86"
BOX_FILE_86="$BASE_DIR/box/$BOX_86"
if [ ! -f "$TURNIP_FILE_86" ]; then
turnip_n_86="–ù–µ –Ω–∞–π–¥–µ–Ω         ${TURNIP_86%.WEG}"
else
turnip_n_86="–£—Å–ø–µ—à–Ω–æ           ${TURNIP_86%.WEG}"
fi
if [ ! -f "$DXVK_FILE_86" ]; then
dxvk_n_86="–ù–µ –Ω–∞–π–¥–µ–Ω         ${DXVK_86%.WEG}"
else
dxvk_n_86="–£—Å–ø–µ—à–Ω–æ           ${DXVK_86%.WEG}"
fi
if [ ! -f "$BOX_FILE_86" ]; then
box_n_86="–ù–µ –Ω–∞–π–¥–µ–Ω         ${BOX_86%.WEG}"
else
box_n_86="–£—Å–ø–µ—à–Ω–æ           ${BOX_86%.WEG}"
fi
if [ -f "$TURNIP_FILE_86" ]; then
turnip_86="Driver –≤–µ—Ä—Å–∏—è:    ${TURNIP_86%.WEG}"
elif [ ! -f "$TURNIP_FILE_86" ]; then
    if [[ "$TURNIP_86" == turnip*.WEG ]]; then
turnip_86="Driver —Å–∏—Å—Ç–µ–º–Ω—ã–π: turnip-v4"
    elif [[ "$TURNIP_86" == virgl*.WEG ]]; then
turnip_86="Driver —Å–∏—Å—Ç–µ–º–Ω—ã–π: virgl-mesa-18"
    fi
fi
if [ -f "$DXVK_FILE_86" ]; then
dxvk_86="Render –≤–µ—Ä—Å–∏—è:    ${DXVK_86%.WEG}"
elif [ ! -f "$DXVK_FILE_86" ]; then
    if [[ "$DXVK_86" == dxvk*.WEG ]]; then
dxvk_86="Render —Å–∏—Å—Ç–µ–º–Ω—ã–π: dxvk-async-1.10.3"
    elif [[ "$DXVK_86" == wined*.WEG ]]; then
dxvk_86="Render —Å–∏—Å—Ç–µ–º–Ω—ã–π: wined3d-8.0.2"
    fi
fi
if [ -f "$BOX_FILE_86" ]; then
   box_86="Box    –≤–µ—Ä—Å–∏—è:    ${BOX_86%.WEG}"
elif [ ! -f "$BOX_FILE_86" ]; then
box_86="Box    —Å–∏—Å—Ç–µ–º–Ω—ã–π: box86.nov10"
fi
version_86="Mobox  –≤–µ—Ä—Å–∏—è:               $MOBOX_86"
limit_DX="–õ–∏–º–∏—Ç DirectX:               $DX_VER_86"
resolution="–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞:           $RESOLUTION_86"
strech="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —à–∏—Ä–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞ $STRETCH_86"
cores="–ê–∫—Ç–∏–≤–Ω—ã–µ —è–¥—Ä–∞:               $PRIM_COR_86"
limit_fps="–õ–∏–º–∏—Ç FPS:                   $FPS_LIM_86"
dri_3="DRI 3:                       $DRI3_86"
servic="–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ Services.exe:     $SERVICES_86"
dialog --no-shadow \
--title "–ó–∞–ø—É—Å–∫ Mobox box86" --infobox "\n
–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Mobox box86\n
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n
$turnip_n_86\n
$dxvk_n_86\n
$box_n_86\n
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n
$turnip_86\n
$dxvk_86\n
$box_86\n
$version_86\n
$limit_DX\n
$resolution\n
$strech\n
$cores\n
$limit_fps\n
$dri_3\n
$servic\n\n
" 21 45
	if [ -n "$value" ]; then
		if [ -d "$PREFIX/glibc-x86" ]; then
        	mv $PREFIX/glibc $PREFIX/glibc-wow64 || { echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ glibc"; exit 1; }
        	mv $PREFIX/glibc-x86 $PREFIX/glibc || { echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ glibc-x86"; exit 1; }
    	else 
			clear
			am broadcast -a com.termux.x11.ACTION_STOP -p com.termux.x11 &>/dev/null &
			dialog --no-shadow \
			--msgbox "üö´ –§–∞–π–ª—ã Mobox box86 –Ω–µ –Ω–∞–π–¥–µ–Ω—ã,\n
   –î–æ–±–∞–≤—Ç–µ —Ñ–∞–π–ª—ã Mobox box86." 6 36
			clear
			exit 1
        fi
    fi
sleep 0.5
export PULSE_SERVER=127.0.0.1
export DISPLAY=:0
if [[ "$TURNIP_86" == turnip* ]]; then
    if [ -f "$PREFIX/glibc/opt/virgl/virgl-enabled" ]; then
        rm -rf $PREFIX/glibc/opt/virgl/virgl-enabled &>/dev/null &
    fi
    if [ -f "$PREFIX/tmp/.virgl_test" ]; then
        rm -rf $PREFIX/tmp/.virgl_test &>/dev/null &
    fi
elif [[ "$TURNIP_86" == virgl* ]]; then
    if [ ! -f "$PREFIX/glibc/opt/virgl/virgl-enabled" ]; then
        touch $PREFIX/glibc/opt/virgl/virgl-enabled &>/dev/null &
        if [ -f "$PREFIX/glibc/opt/virgl/virgl-enabled" ]; then
            chmod 777 $PREFIX/glibc/opt/virgl/virgl-enabled &>/dev/null
        fi
    fi
    if [ ! -f "$PREFIX/tmp/.virgl_test" ]; then
        touch $PREFIX/tmp/.virgl_test &>/dev/null &
        if [ -f "$PREFIX/tmp/.virgl_test" ]; then
            chmod 777 $PREFIX/tmp/.virgl_test &>/dev/null
        fi
    fi
    chmod +x $PREFIX/glibc/opt/virgl/libvirgl_test_server.so &>/dev/null
	TMPDIR=$PREFIX/tmp $PREFIX/glibc/opt/virgl/libvirgl_test_server.so &>/dev/null &
fi
rm -rf $PREFIX/glibc/opt/shutdown
. "$PREFIX/mobox/link-kreator" "$HOME" > /dev/null 2>&1 &
cd
mkdir -p /sdcard/Android/data/com.termux/files/Download
. $PREFIX/mobox/configs86 &>/dev/null
. $PREFIX/glibc/opt/conf/path.conf &>/dev/null
. $PREFIX/glibc/opt/conf/cores.conf &>/dev/null
. $PREFIX/glibc/opt/conf/force_compatibility.conf &>/dev/null
. $PREFIX/mobox/cleaner_links &>/dev/null
load_configs
termux-x11-preference displayStretch:$displayStretch displayResolutionMode:custom displayResolutionCustom:$RESOLUTION_86 &>/dev/null
if [ "$LANG_BOX" = "ru_RU.utf8" ]; then
    if [ -f "$HOME/86_RU" ]; then
        feh -Z -F "$HOME/86_RU"
    fi &>/dev/null &
elif [ "$LANG_BOX" = "uk_UA.utf8" ]; then
    if [ -f "$HOME/86_UA" ]; then
        feh -Z -F "$HOME/86_UA"
    fi &>/dev/null &
elif [ "$LANG_BOX" = "en_US.utf8" ]; then
    if [ -f "$HOME/86_EN" ]; then
        feh -Z -F "$HOME/86_EN"
    fi &>/dev/null &
fi
DXVK_CONFIG_FILE=$PREFIX/glibc/opt/dxvk.conf
sed -i "1s/.*/${GALLIUM_HUD_86}/" "$hud"
sed -i "2s/.*/${GALLIUM_HUD_PERIOD_86}/" "$hud"
sed -i "3s/.*/${DXVK_HUD_86,$SCALE_86}/" "$hud"
if [ "$FPS_LIM_86" ]; then
    sed -i "4s/.*/dxgi.maxFrameRate = \"$FPS_LIM_86\"/" "$DXVK_CONFIG_FILE"
    sed -i "5s/.*/d3d9.maxFrameRate = \"$FPS_LIM_86\"/" "$DXVK_CONFIG_FILE"
fi
if [ "$DX_VER_86" ]; then
    sed -i "3s/.*/d3d11.maxFeatureLevel = \"$DX_VER_86\"/" "$DXVK_CONFIG_FILE"
fi
unzip_file() {
    local file_path="$1"
    local dest_dir="$2"
    
    if [ -e "$file_path" ]; then
        echo "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ $file_path –≤ $dest_dir..."
        unzip -o "$file_path" -d "$dest_dir"
        echo "–£—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–æ."
    else
        echo "–§–∞–π–ª $file_path –Ω–µ –Ω–∞–π–¥–µ–Ω."
    fi
}
source "$PREFIX/glibc/opt/conf/wine_path.conf"
if [ -f "$BOX_FILE_86" ]; then
    unzip_file "$BOX_FILE_86" "$PREFIX/glibc/bin" &>/dev/null
elif [ ! -f "$BOX_FILE_86" ]; then
    tar -xf $PREFIX/glibc/opt/box/nov10.tar.xz -C $PREFIX/glibc/bin &>/dev/null
fi
chmod +x $PREFIX/glibc/bin/{box86,box64}
chmod +x $WINE_PATH/bin/{wine,wine64,wineserver}
patchelf --force-rpath --set-rpath $PREFIX/glibc/lib --set-interpreter $PREFIX/glibc/lib/ld-linux-aarch64.so.1 $PREFIX/glibc/bin/box64
patchelf --force-rpath --set-rpath $PREFIX/glibc/lib32 --set-interpreter $PREFIX/glibc/lib32/ld-linux-armhf.so.3 $PREFIX/glibc/bin/box86
rm -rf $PREFIX/glibc/bin/{wine,wine64,wineserver}
ln -sf $WINE_PATH/bin/wine $PREFIX/glibc/bin/wine
ln -sf $WINE_PATH/bin/wine64 $PREFIX/glibc/bin/wine64
ln -sf $WINE_PATH/bin/wineserver $PREFIX/glibc/bin/wineserver
export GLIBC_BIN=$PREFIX/glibc/bin
unset LD_PRELOAD
if [ ! -e $WINEPREFIX/.update-timestamp ]; then
. $PREFIX/glibc/opt/package-manager/token
echo -e "\033[93m–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤\033[0m \033[36mMobox box86.\033[0m"
echo -e "\033[93m–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.\033[0m"
	rm -rf $WINEPREFIX
	unset BOX86_DYNAREC_BIGBLOCK
	unset BOX64_DYNAREC_BIGBLOCK
	unset WINEESYNC
	unset WINEESYNC_TERMUX
	unset BOX86_DYNAREC_CALLRET
	unset BOX64_DYNAREC_CALLRET
    if [ "$OpenGL_86_eng" == "Enable" ]; then
        export LIBGL_DRI3=1
    else
        export LIBGL_DRI3=0
    fi
	if [ -e $WINE_PATH/lib/wine/i386-windows/shell32-bak.dll ]; then
		mv $WINE_PATH/lib/wine/i386-windows/shell32-bak.dll $WINE_PATH/lib/wine/i386-windows/shell32.dll &>/dev/null
		mv $WINE_PATH/lib/wine/x86_64-windows/shell32-bak.dll $WINE_PATH/lib/wine/x86_64-windows/shell32.dll &>/dev/null
		mv $WINE_PATH/lib64/wine/x86_64-windows/shell32-bak.dll $WINE_PATH/lib64/wine/x86_64-windows/shell32.dll &>/dev/null
	fi
if [ $WINE_86 = OFF ]; then
    export DISPLAY=:1
fi
	WINEDLLOVERRIDES="winegstreamer=disabled,mscoree=disabled" taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 wineboot -u >${LOG_PATH}_wineboot.txt 2>&1
	if [ ! -e $WINEPREFIX/.update-timestamp ]; then
		echo "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å. –°–º. ${LOG_PATH}_wineboot.txt"
		$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
		export LD_PRELOAD=/data/data/com.termux/files/usr/lib/libtermux-exec.so
		rm -rf $PREFIX/tmp/pulse-*
		pulseaudio -k &>/dev/null
		pkill -f pulseaudio
		pkill -f "app_process / com.termux.x11"
		sleep 5
		exit
	fi
echo "disable">$WINEPREFIX/.update-timestamp
	7z x $PREFIX/glibc/opt/prefix/drive_c.7z -o$WINEPREFIX/drive_c -y &>/dev/null
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mDirectX\033[0m"
	7z x $PREFIX/glibc/opt/prefix/directx.7z -o$WINEPREFIX/drive_c -y &>/dev/null
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36m—è—Ä–ª—ã–∫–æ–≤ –≤ –º–µ–Ω—é ¬´–ü—É—Å–∫¬ª\033[0m"
	cp -r $PREFIX/glibc/opt/prefix/start/* "$WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start Menu"
	rm -rf "$WINEPREFIX/dosdevices/z:"
	ln -sf /data/data/com.termux/files "$WINEPREFIX/dosdevices/z:"
	ln -sf /sdcard/Download "$WINEPREFIX/dosdevices/d:"
	ln -sf /sdcard/Android/data/com.termux/files/Download "$WINEPREFIX/dosdevices/e:"
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36m—Ç–≤–∏–∫–æ–≤ —Ä–µ–µ—Å—Ç—Ä–∞\033[0m"
	cp $PREFIX/glibc/opt/prefix/marlett.ttf $WINEPREFIX/drive_c/windows/Fonts
	taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 regedit $PREFIX/glibc/opt/prefix/user.reg &>/dev/null
	taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 regedit $PREFIX/glibc/opt/prefix/system.reg &>/dev/null
	if [ ! "$STARTUP_COMPATIBILITY_MODE" = "1" ]; then
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mPhysX 9.10, 7-Zip, Visual C++\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "start Z:\\usr\\glibc\\opt\\apps\\install.bat" >${LOG_PATH}_redist.txt 2>&1
		if [ -f "$DXVK_FILE_86" ]; then
	    	sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36m"${DXVK_86%.*}"\033[0m"
            DISPLAY=:0 taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\"${DXVK_86%.*}".bat" &>/dev/null
        elif [ ! -f "$DXVK_FILE_86" ]; then
            if [[ "$DXVK_86" == dxvk*.WEG ]]; then
            sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mdxvk-async-1.10.3\033[0m\033[38;5;202m (mobox)\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\dxvk-async-1.10.3.bat" &>/dev/null
			elif [[ "$DXVK_86" == wined*.WEG ]]; then
			sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mwined3d-8.0.2\033[0m\033[38;5;202m (mobox)\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\wined3d-8.0.2.bat" &>/dev/null
		    fi
		fi
		if [ -f "$TURNIP_FILE_86" ]; then
	    	sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36m"${TURNIP_86%.*}"\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\"${TURNIP_86%.*}".bat" &>/dev/null
        elif [ ! -f "$TURNIP_FILE_86" ]; then
            if [[ "$TURNIP_86" == turnip*.WEG ]]; then
            sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mturnip-v4\033[0m\033[38;5;202m (mobox)\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\turnip-v4.bat" &>/dev/null
			elif [[ "$TURNIP_86" == virgl*.WEG ]]; then
			sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mvirgl-mesa-18\033[0m\033[38;5;202m (mobox)\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\virgl-mesa-18.bat" &>/dev/null
		    fi
		fi
	fi
	sleep 3
	if [ -e $WINE_PATH/lib/wine/i386-unix/libwine.so.1 ]; then
		mv $WINE_PATH/lib/wine/i386-windows/shell32.dll $WINE_PATH/lib/wine/i386-windows/shell32-bak.dll &>/dev/null
		mv $WINE_PATH/lib/wine/x86_64-windows/shell32.dll $WINE_PATH/lib/wine/x86_64-windows/shell32-bak.dll &>/dev/null
		mv $WINE_PATH/lib64/wine/x86_64-windows/shell32.dll $WINE_PATH/lib64/x86_64-windows/shell32-bak.dll &>/dev/null
	else
		rm -rf $WINE_PATH/lib/wine/i386-unix/shell32.dll.so &>/dev/null
		rm -rf $WINE_PATH/lib/wine/x86_64-unix/shell32.dll.so &>/dev/null
		rm -rf $WINE_PATH/lib64/wine/x86_64-unix/shell32.dll.so &>/dev/null
	fi
	$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
else
    if [ -f "$DXVK_FILE_86" ]; then
        unzip_file "$DXVK_FILE_86" "$WINE_PATH/.wine/drive_c" &>/dev/null
    elif [ ! -f "$DXVK_FILE_86" ]; then
        if [[ "$DXVK_86" == dxvk*.WEG ]]; then
			DISPLAY=:0 taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\dxvk-async-1.10.3.bat" &>/dev/null
        elif [[ "$DXVK_86" == wined*.WEG ]]; then
			DISPLAY=:0 taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\wined3d-8.0.2.bat" &>/dev/null
        fi
    fi
    if [ -f "$TURNIP_FILE_86" ]; then
        unzip_file "$TURNIP_FILE_86" "$PREFIX/glibc" &>/dev/null
    elif [ ! -f "$TURNIP_FILE_86" ]; then
        if [[ "$TURNIP_86" == turnip*.WEG ]]; then
			DISPLAY=:0 taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\turnip-v4.bat" &>/dev/null
        elif [[ "$TURNIP_86" == virgl*.WEG ]]; then
			DISPLAY=:0 taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\virgl-mesa-18.bat" &>/dev/null
        fi
    fi
fi
if ! ls $PREFIX/glibc/opt/prefix/start/Registry/2.* &>/dev/null; then
	cp -r $PREFIX/glibc/opt/prefix/start/Registry/2.* $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Registry
fi
rm -rf "$WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start Menu/Install/media foundation (for RE)"
if [ ! -e "$WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start Menu/Install/media foundation (for RE).lnk" ]; then
	cp "$PREFIX/glibc/opt/prefix/start/Install/media foundation (for RE).lnk" "$WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start Menu/Install"
fi
rm -rf $PREFIX/glibc/opt/prefix/start-default

rm -d $PREFIX/glibc/opt/prefix/start/Install/1.* &>/dev/null
rm -d $PREFIX/glibc/opt/prefix/start/Install/2.* &>/dev/null
rm -d $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/1.* &>/dev/null
rm -d $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/2.* &>/dev/null
if ls $PREFIX/glibc/opt/prefix/start/Install/1.* &>/dev/null && ls $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/1.* &>/dev/null; then
	rm -rf $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/1.*/* &>/dev/null
	cp $PREFIX/glibc/opt/prefix/start/Install/1.*/* $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/1.* &>/dev/null
fi
if ls $PREFIX/glibc/opt/prefix/start/Install/2.* &>/dev/null && ls $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/2.* &>/dev/null; then
	rm -rf $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/2.*/* &>/dev/null
	cp $PREFIX/glibc/opt/prefix/start/Install/2.*/* $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/2.* &>/dev/null
fi
load_configs
ln -sf $(df -H | grep -o "/storage/....-....") "$WINEPREFIX/dosdevices/f:" &>/dev/null

DISPLAY=:0 LC_ALL=$LANG_BOX taskset -c $PRIM_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,$RESOLUTION_86 $PREFIX/mobox/wfm.exe >$LOG_PATH 2>&1 &
taskset -c $SEC_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,$RESOLUTION_86 $PREFIX/glibc/bin/ib.exe &>/dev/null &
DISPLAY=:0 taskset -c $SEC_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,$RESOLUTION_86 $PREFIX/glibc/opt/apps/f5taskmgr.exe &>/dev/null &
sleep 2
if [ "$STARTUP_WINEDEVICE_MODE" = "0" ]; then
        $GLIBC_BIN/box64 $GLIBC_BIN/wine taskkill /f /im services.exe &>/dev/null &
fi
sleep 1
if [ $DXVK_x86 != $DXVK_86 ]; then
DISPLAY=:0 taskset -c $SEC_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\"${DXVK_86%.*}".bat" &>/dev/null
sed -i "125s/.*/DXVK_x86=$DXVK_86/" "$hom_86"
fi
if [ $TURNIP_x86 != $TURNIP_86 ]; then
DISPLAY=:0 taskset -c $SEC_COR_86 $GLIBC_BIN/box64 $GLIBC_BIN/wine64 explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\"${TURNIP_86%.*}".bat" &>/dev/null
sed -i "126s/.*/TURNIP_x86=$TURNIP_86/" "$hom_86"
fi
REBOOT=0
if ps aux | grep -v grep | grep -q "wine"
then
sleep 10
pkill feh &>/dev/null &
fi
REBOOT=0
LAST_SERVICES_86=${LAST_SERVICES_86:-1}
GAME_SHORT="${GAME%.lnk}"
while true; do
strech="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —à–∏—Ä–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞ $STRETCH_86"
if [ "$STRETCH_86" = "–ù–µ —Ä–∞—Å—Ç—è–Ω—É—Ç–æ" ]; then
    NAME="–†–∞—Å—Ç—è–Ω—É—Ç—å –ø–æ —à–∏—Ä–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞"
else
    NAME="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞"
fi
wer=$(dialog --no-shadow \
--title "${GAME}" --default-item "$LAST_SERVICES_86" --menu \
"\n
–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Mobox box86\n
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n
$turnip_n_86\n
$dxvk_n_86\n
$box_n_86\n
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n
$turnip_86\n
$dxvk_86\n
$box_86\n
$version_86\n
$limit_DX\n
$resolution\n
$strech\n
$cores\n
$limit_fps\n
$dri_3\n
$servic\n" 27 45 4 \
    "1" "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É ${GAME_SHORT}" \
    "2" "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å ${GAME_SHORT}" \
    "3" "$NAME" 2>&1 >/dev/tty)
case $? in
    1) source "$HOME/.shortcuts/,/Mobox box86" & ;; 
esac 
LAST_SERVICES_86=$wer
case $wer in
    1) 
        $GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null &
        break
        ;;
    2)  
		$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
		break & exec bash -c ". \"$HOME/.shortcuts/,/Mobox box86\""
        ;;
    3)  
        if [ "$STRETCH_86" = "–ù–µ —Ä–∞—Å—Ç—è–Ω—É—Ç–æ" ]; then
        STRETCH_86="–†–∞—Å—Ç—è–Ω—É—Ç–æ"
        source "$HOME/.shortcuts/${GAME%.lnk}" &
        termux-x11-preference displayStretch:true
        NAME="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞"
        sed -i "173s/.*/STRETCH_86_eng=\"Stretched\"/" "${hom_game}"
        sed -i "117s/.*/STRETCH_86=\"–†–∞—Å—Ç—è–Ω—É—Ç–æ\"/" "${hom_game}"
        sed -i '116s/.*/displayStretch=true/' "${hom_game}"
    else
        STRETCH_86="–ù–µ —Ä–∞—Å—Ç—è–Ω—É—Ç–æ"
        source "$HOME/.shortcuts/${GAME%.lnk}" &
        termux-x11-preference displayStretch:false
        NAME="–†–∞—Å—Ç—è–Ω—É—Ç—å –ø–æ —à–∏—Ä–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞"
        sed -i "173s/.*/STRETCH_86_eng=\"Not stretched\"/" "${hom_game}"
        sed -i "117s/.*/STRETCH_86=\"–ù–µ —Ä–∞—Å—Ç—è–Ω—É—Ç–æ\"/" "${hom_game}"
        sed -i '116s/.*/displayStretch=false/' "${hom_game}"
    fi
        ;;
esac
if [ -e $PREFIX/glibc/opt/shutdown ]; then
	rm -rf $PREFIX/glibc/opt/shutdown
	$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
	break
fi
if [ -e $PREFIX/glibc/opt/reboot ]; then
	rm -rf $PREFIX/glibc/opt/reboot
	$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
	REBOOT=1
	break
fi
done
am broadcast -a com.termux.x11.ACTION_STOP -p com.termux.x11 &>/dev/null
export LD_PRELOAD=/data/data/com.termux/files/usr/lib/libtermux-exec.so
pkill -f inotifywait &>/dev/null
pkill -f Xnoimage-dex2oat &>/dev/null
stop-all
if [ "$REBOOT" = "1" ]; then
	exec $0
fi
elif [ "$BOX_VERS" == "WOW64" ]; then
    if [ "$OpenGL_WOW_eng" == "Enable" ]; then
        export LIBGL_DRI3=1
    else
        export LIBGL_DRI3=0
    fi
DXVK_FILE_64="$BASE_DIR/drivers/render/$DXVK_WOW"
TURNIP_FILE_64="$BASE_DIR/drivers/driver_x64/$TURNIP_WOW"
BOX_FILE_64="$BASE_DIR/box/$BOX_WOW"
if [ ! -f "$TURNIP_FILE_64" ]; then
turnip_n_wow="–ù–µ –Ω–∞–π–¥–µ–Ω         ${TURNIP_WOW%.WEG}"
else
turnip_n_wow="–£—Å–ø–µ—à–Ω–æ           ${TURNIP_WOW%.WEG}"
fi
if [ ! -f "$DXVK_FILE_64" ]; then
dxvk_n_wow="–ù–µ –Ω–∞–π–¥–µ–Ω         ${DXVK_WOW%.WEG}"
else
dxvk_n_wow="–£—Å–ø–µ—à–Ω–æ           ${DXVK_WOW%.WEG}"
fi
if [ ! -f "$BOX_FILE_64" ]; then
box_n_wow="–ù–µ –Ω–∞–π–¥–µ–Ω         ${BOX_WOW%.WEG}"
else
box_n_wow="–£—Å–ø–µ—à–Ω–æ           ${BOX_WOW%.WEG}"
fi
if [ -f "$TURNIP_FILE_64" ]; then
turnip_wow="Driver –≤–µ—Ä—Å–∏—è:    ${TURNIP_WOW%.WEG}"
elif [ ! -f "$TURNIP_FILE_64" ]; then
    if [[ "$TURNIP_WOW" == turnip*.WEG ]]; then
turnip_wow="Driver —Å–∏—Å—Ç–µ–º–Ω—ã–π: turnip-v6.5"
    elif [[ "$TURNIP_WOW" == virgl*.WEG ]]; then
turnip_wow="Driver —Å–∏—Å—Ç–µ–º–Ω—ã–π: virgl-mesa-18"
    fi
fi

if [ -f "$DXVK_FILE_64" ]; then
dxvk_wow="Render –≤–µ—Ä—Å–∏—è:    ${DXVK_WOW%.WEG}"
elif [ ! -f "$DXVK_FILE_64" ]; then
    if [[ "$DXVK_WOW" == dxvk*.WEG ]]; then
dxvk_wow="Render —Å–∏—Å—Ç–µ–º–Ω—ã–π: dxvk-async-1.10.3"
    elif [[ "$DXVK_WOW" == wined*.WEG ]]; then
dxvk_wow="Render —Å–∏—Å—Ç–µ–º–Ω—ã–π: wined3d-8.0.2"
    fi
fi
if [ -f "$BOX_FILE_64" ]; then
   box_wow="Box    –≤–µ—Ä—Å–∏—è:    ${BOX_WOW%.WEG}"
elif [ ! -f "$BOX_FILE_64" ]; then
box_wow="Box    —Å–∏—Å—Ç–µ–º–Ω—ã–π: box64mar3"
fi
version_wow="Mobox  –≤–µ—Ä—Å–∏—è:               $MOBOX_WOW"
limit_DX="–õ–∏–º–∏—Ç DirectX:               $DX_VER_WOW"
resolution="–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞:           $RESOLUTION_WOW"
strech="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —à–∏—Ä–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞ $STRETCH_WOW"
cores="–ê–∫—Ç–∏–≤–Ω—ã–µ —è–¥—Ä–∞:               $PRIM_COR_WOW"
limit_fps="–õ–∏–º–∏—Ç FPS:                   $FPS_LIM_WOW"
dri_3="DRI 3:                       $DRI3_WOW"
servic="–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ Services.exe:     $SERVICES_WOW"
dialog --no-shadow \
--title "–ó–∞–ø—É—Å–∫ Mobox WoW64" --infobox "\n
–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Mobox WoW64\n
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n
$turnip_n_wow\n
$dxvk_n_wow\n
$box_n_wow\n
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n
$turnip_wow\n
$dxvk_wow\n
$box_wow\n
$version_wow\n
$limit_DX\n
$resolution\n
$strech\n
$cores\n
$limit_fps\n
$dri_3\n
$servic\n\n
" 21 45
if [ -z "$value" ]; then
    if [ -d "$PREFIX/glibc-wow64" ]; then
        mv $PREFIX/glibc $PREFIX/glibc-x86 || { echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ glibc"; exit 1; }
        mv $PREFIX/glibc-wow64 $PREFIX/glibc || { echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ glibc-wow64"; exit 1; }
    else
        clear
        am broadcast -a com.termux.x11.ACTION_STOP -p com.termux.x11 &>/dev/null &
        dialog --no-shadow \
        --msgbox "üö´ –§–∞–π–ª—ã Mobox WoW64 –Ω–µ –Ω–∞–π–¥–µ–Ω—ã,\n
   –î–æ–±–∞–≤—Ç–µ —Ñ–∞–π–ª—ã Mobox WoW64." 6 36
        clear
        exit 1
    fi
fi
sleep 0.5
export PULSE_SERVER=127.0.0.1
export DISPLAY=:0
if [[ "$TURNIP_WOW" == turnip* ]]; then
    if [ -f "$PREFIX/glibc/opt/virgl/virgl-enabled" ]; then
        rm -rf $PREFIX/glibc/opt/virgl/virgl-enabled &>/dev/null &
    fi
    if [ -f "$PREFIX/tmp/.virgl_test" ]; then
        rm -rf $PREFIX/tmp/.virgl_test &>/dev/null &
    fi
elif [[ "$TURNIP_WOW" == virgl* ]]; then
    if [ ! -f "$PREFIX/glibc/opt/virgl/virgl-enabled" ]; then
        touch $PREFIX/glibc/opt/virgl/virgl-enabled &>/dev/null &
        if [ -f "$PREFIX/glibc/opt/virgl/virgl-enabled" ]; then
            chmod 777 $PREFIX/glibc/opt/virgl/virgl-enabled &>/dev/null
        fi
    fi
    if [ ! -f "$PREFIX/tmp/.virgl_test" ]; then
        touch $PREFIX/tmp/.virgl_test &>/dev/null &
        if [ -f "$PREFIX/tmp/.virgl_test" ]; then
            chmod 777 $PREFIX/tmp/.virgl_test &>/dev/null
        fi
    fi
    chmod +x $PREFIX/glibc/opt/virgl/libvirgl_test_server.so &>/dev/null
	TMPDIR=$PREFIX/tmp $PREFIX/glibc/opt/virgl/libvirgl_test_server.so &>/dev/null &
fi
rm -rf $PREFIX/glibc/opt/shutdown
. "$PREFIX/mobox/link-kreator" "$HOME" > /dev/null 2>&1 &
cd
mkdir -p /sdcard/Android/data/com.termux/files/Download
. $PREFIX/mobox/configs &>/dev/null
. $PREFIX/glibc/opt/conf/path.conf &>/dev/null
. $PREFIX/glibc/opt/conf/force_compatibility.conf &>/dev/null
. $PREFIX/mobox/cleaner_links &>/dev/null
load_configs &>/dev/null
termux-x11-preference displayStretch:$displayStretch displayResolutionMode:custom displayResolutionCustom:$RESOLUTION_WOW &>/dev/null
if [ "$LANG_BOX" = "ru_RU.utf8" ]; then
    if [ -f "$HOME/64_RU" ]; then
        feh -Z -F "$HOME/64_RU"
    fi &>/dev/null &
elif [ "$LANG_BOX" = "uk_UA.utf8" ]; then
    if [ -f "$HOME/64_UA" ]; then
        feh -Z -F "$HOME/64_UA"
    fi &>/dev/null &
elif [ "$LANG_BOX" = "en_US.utf8" ]; then
    if [ -f "$HOME/64_EN" ]; then
        feh -Z -F "$HOME/64_EN"
    fi &>/dev/null &
fi
DXVK_CONFIG_FILE=$PREFIX/glibc/opt/dxvk.conf
sed -i "1s/.*/${GALLIUM_HUD_WOW}/" "$hud"
sed -i "2s/.*/${GALLIUM_HUD_PERIOD_WOW}/" "$hud"
sed -i "3s/.*/${DXVK_HUD_WOW}/" "$hud"
if [ "$FPS_LIM_WOW" ]; then
    sed -i "4s/.*/dxgi.maxFrameRate = \"$FPS_LIM_WOW\"/" "$DXVK_CONFIG_FILE"
    sed -i "5s/.*/d3d9.maxFrameRate = \"$FPS_LIM_WOW\"/" "$DXVK_CONFIG_FILE"
fi
if [ "$DX_VER_WOW" ]; then
    sed -i "3s/.*/d3d11.maxFeatureLevel = \"$DX_VER_WOW\"/" "$DXVK_CONFIG_FILE"
fi
unzip_file() {
    local file_path="$1"
    local dest_dir="$2"
    if [ -e "$file_path" ]; then
        echo "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ $file_path –≤ $dest_dir..."
        unzip -o "$file_path" -d "$dest_dir"
        echo "–£—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–æ."
    else
        echo "–§–∞–π–ª $file_path –Ω–µ –Ω–∞–π–¥–µ–Ω."
    fi
}
source "$PREFIX/glibc/opt/conf/wine_path.conf"
if [ -f "$BOX_FILE_64" ]; then
    unzip_file "$BOX_FILE_64" "$PREFIX/glibc/bin" &>/dev/null
elif [ ! -f "$BOX_FILE_64" ]; then
    tar -xf $PREFIX/glibc/opt/box/mar3.tar.xz -C $PREFIX/glibc/bin &>/dev/null
fi
chmod +x $PREFIX/glibc/bin/box64
chmod +x $WINE_PATH/bin/{wine,wineserver}
patchelf --force-rpath --set-rpath $PREFIX/glibc/lib --set-interpreter $PREFIX/glibc/lib/ld-linux-aarch64.so.1 $PREFIX/glibc/bin/box64
rm -rf $PREFIX/glibc/bin/{wine,wineserver}
ln -sf $WINE_PATH/bin/wine $PREFIX/glibc/bin/wine
ln -sf $WINE_PATH/bin/wineserver $PREFIX/glibc/bin/wineserver
export GLIBC_BIN=$PREFIX/glibc/bin
unset LD_PRELOAD
if [ ! -e $WINEPREFIX/.update-timestamp ]; then
echo -e "\033[93m–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤\033[0m \033[36mMobox WoW64.\033[0m"
echo -e "\033[93m–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.\033[0m"
	rm -rf $WINEPREFIX
	unset BOX64_DYNAREC_BIGBLOCK
	unset WINEESYNC
	unset WINEESYNC_TERMUX
	unset BOX64_DYNAREC_CALLRET
	if [ -e $WINE_PATH/lib/wine/i386-windows/shell32-bak.dll ] || [ -e $WINE_PATH/lib64/wine/x86_64-windows/shell32-bak.dll ]; then
		mv $WINE_PATH/lib/wine/i386-windows/shell32-bak.dll $WINE_PATH/lib/wine/i386-windows/shell32.dll &>/dev/null
		mv $WINE_PATH/lib/wine/x86_64-windows/shell32-bak.dll $WINE_PATH/lib/wine/x86_64-windows/shell32.dll &>/dev/null
		mv $WINE_PATH/lib64/wine/x86_64-windows/shell32-bak.dll $WINE_PATH/lib64/wine/x86_64-windows/shell32.dll &>/dev/null
		mv $WINE_PATH/lib64/wine/i386-windows/shell32-bak.dll $WINE_PATH/lib64/wine/i386-windows/shell32.dll &>/dev/null
	fi
if [ $WINE_64 = OFF ]; then
    export DISPLAY=:1
fi
	WINEDLLOVERRIDES="winegstreamer=disabled,mscoree=disabled" taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine wineboot -u >${LOG_PATH}_wineboot.txt 2>&1
	if [ ! -e $WINEPREFIX/.update-timestamp ]; then
		echo "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å. –°–º. ${LOG_PATH}_wineboot.txt"
		$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
		export LD_PRELOAD=/data/data/com.termux/files/usr/lib/libtermux-exec.so
		rm -rf $PREFIX/tmp/pulse-*
		pulseaudio -k &>/dev/null
		pkill -f pulseaudio
		pkill -f "app_process / com.termux.x11"
		sleep 5
		exit
	fi
	echo "disable">$WINEPREFIX/.update-timestamp
	7z x $PREFIX/glibc/opt/prefix/drive_c.7z -o$WINEPREFIX/drive_c -y &>/dev/null
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mDirectX\033[0m"
	7z x $PREFIX/glibc/opt/prefix/directx.7z -o$WINEPREFIX/drive_c -y &>/dev/null
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36m—è—Ä–ª—ã–∫–æ–≤ –≤ –º–µ–Ω—é ¬´–ü—É—Å–∫¬ª\033[0m"
	cp -r $PREFIX/glibc/opt/prefix/start/* "$WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start Menu"
	rm -rf "$WINEPREFIX/dosdevices/z:"
	ln -sf /data/data/com.termux/files "$WINEPREFIX/dosdevices/z:"
	ln -sf /sdcard/Download "$WINEPREFIX/dosdevices/d:"
	ln -sf /sdcard/Android/data/com.termux/files/Download "$WINEPREFIX/dosdevices/e:"
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36m—Ç–≤–∏–∫–æ–≤ —Ä–µ–µ—Å—Ç—Ä–∞\033[0m"
	cp $PREFIX/glibc/opt/prefix/marlett.ttf $WINEPREFIX/drive_c/windows/Fonts
	taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine regedit $PREFIX/glibc/opt/prefix/user.reg &>/dev/null
	taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine regedit $PREFIX/glibc/opt/prefix/system.reg &>/dev/null
	mkdir -p "$WINEPREFIX/moboxmeta"
	taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine regedit $PREFIX/glibc/opt/prefix/fix-services.reg &>/dev/null
	touch $WINEPREFIX/moboxmeta/services-fix-applied
	tar -xf $PREFIX/glibc/opt/prefix/fix-fonts.tar.xz -C $WINEPREFIX/drive_c/windows
	touch $WINEPREFIX/moboxmeta/fonts-fix-applied
	touch $WINEPREFIX/moboxmeta/dxdlls-fix-applied
	if [ ! "$STARTUP_COMPATIBILITY_MODE" = "1" ]; then
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mPhysX 9.10, 7-Zip, Visual C++\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "start Z:\\usr\\glibc\\opt\\apps\\install.bat" >${LOG_PATH}_redist.txt 2>&1
		if [ -f "$DXVK_FILE_64" ]; then
		    sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36m"${DXVK_WOW%.*}"\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\"${DXVK_WOW%.*}".bat" &>/dev/null
        elif [ ! -f "$DXVK_FILE_64" ]; then
            if [[ "$DXVK_WOW" == dxvk*.WEG ]]; then
            sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mdxvk-async-1.10.3\033[0m\033[38;5;202m (mobox)\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\dxvk-async-1.10.3.bat" &>/dev/null
			elif [[ "$DXVK_WOW" == wined*.WEG ]]; then
			sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mwined3d-8.0.2\033[0m\033[38;5;202m (mobox)\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\wined3d-8.0.2.bat" &>/dev/null
		    fi
		fi
		if [ -f "$TURNIP_FILE_64" ]; then
	    	sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36m"${TURNIP_WOW%.*}"\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\"${TURNIP_WOW%.*}".bat" &>/dev/null
        elif [ ! -f "$TURNIP_FILE_64" ]; then
            if [[ "$TURNIP_WOW" == turnip*.WEG ]]; then
            sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mturnip-v6.5\033[0m\033[38;5;202m (mobox)\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\turnip-v6.5.bat" &>/dev/null
			elif [[ "$TURNIP_WOW" == virgl*.WEG ]]; then
			sleep 1
echo -e "\033[92m–£—Å—Ç–∞–Ω–æ–≤–∫–∞\033[0m \033[36mvirgl-mesa-18\033[0m\033[38;5;202m (mobox)\033[0m"
			DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\virgl-mesa-18.bat" &>/dev/null
		    fi
		fi
	fi
	sleep 3
	if [ -e $WINE_PATH/lib/wine/i386-unix/libwine.so.1 ] || [ -e $WINE_PATH/lib64/wine/x86_64-unix/libwine.so.1 ]; then
		mv $WINE_PATH/lib/wine/i386-windows/shell32.dll $WINE_PATH/lib/wine/i386-windows/shell32-bak.dll &>/dev/null
		mv $WINE_PATH/lib/wine/x86_64-windows/shell32.dll $WINE_PATH/lib/wine/x86_64-windows/shell32-bak.dll &>/dev/null
		mv $WINE_PATH/lib64/wine/x86_64-windows/shell32.dll $WINE_PATH/lib64/wine/x86_64-windows/shell32-bak.dll &>/dev/null
		mv $WINE_PATH/lib64/wine/i386-windows/shell32.dll $WINE_PATH/lib64/wine/i386-windows/shell32-bak.dll &>/dev/null
	else
		rm -rf $WINE_PATH/lib/wine/i386-unix/shell32.dll.so &>/dev/null
		rm -rf $WINE_PATH/lib/wine/x86_64-unix/shell32.dll.so &>/dev/null
		rm -rf $WINE_PATH/lib64/wine/x86_64-unix/shell32.dll.so &>/dev/null
		rm -rf $WINE_PATH/lib64/wine/i386-unix/shell32.dll.so &>/dev/null
	fi
	$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
else
    if [ -f "$DXVK_FILE_64" ]; then
        unzip_file "$DXVK_FILE_64" "$WINE_PATH/.wine/drive_c" &>/dev/null
    elif [ ! -f "$DXVK_FILE_64" ]; then
        if [[ "$DXVK_WOW" == dxvk*.WEG ]]; then
			DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\dxvk-async-1.10.3.bat" &>/dev/null
        elif [[ "$DXVK_WOW" == wined*.WEG ]]; then
			DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\wined3d-8.0.2.bat" &>/dev/null
        fi
    fi
    if [ -f "$TURNIP_FILE_64" ]; then
        unzip_file "$TURNIP_FILE_64" "$PREFIX/glibc" &>/dev/null
    elif [ ! -f "$TURNIP_FILE_64" ]; then
        if [[ "$TURNIP_WOW" == turnip*.WEG ]]; then
			DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\turnip-v6.5.bat" &>/dev/null
        elif [[ "$TURNIP_WOW" == virgl*.WEG ]]; then
			DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\virgl-mesa-18.bat" &>/dev/null
        fi
    fi
fi
if ! ls $PREFIX/glibc/opt/prefix/start/Registry/2.* &>/dev/null; then
	cp -r $PREFIX/glibc/opt/prefix/start/Registry/2.* $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Registry
fi
rm -rf "$WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start Menu/Install/media foundation (for RE)"
if [ ! -e "$WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start Menu/Install/media foundation (for RE).lnk" ]; then
	cp "$PREFIX/glibc/opt/prefix/start/Install/media foundation (for RE).lnk" "$WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start Menu/Install"
fi
rm -rf $PREFIX/glibc/opt/prefix/start-default
rm -d $PREFIX/glibc/opt/prefix/start/Install/1.* &>/dev/null
rm -d $PREFIX/glibc/opt/prefix/start/Install/2.* &>/dev/null
rm -d $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/1.* &>/dev/null
rm -d $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/2.* &>/dev/null
if ls $PREFIX/glibc/opt/prefix/start/Install/1.* &>/dev/null && ls $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/1.* &>/dev/null; then
	rm -rf $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/1.*/* &>/dev/null
	cp $PREFIX/glibc/opt/prefix/start/Install/1.*/* $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/1.* &>/dev/null
fi
if ls $PREFIX/glibc/opt/prefix/start/Install/2.* &>/dev/null && ls $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/2.* &>/dev/null; then
	rm -rf $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/2.*/* &>/dev/null
	cp $PREFIX/glibc/opt/prefix/start/Install/2.*/* $WINEPREFIX/drive_c/ProgramData/Microsoft/Windows/Start\ Menu/Install/2.* &>/dev/null
fi
mkdir -p $WINEPREFIX/moboxmeta
if [ ! -f $WINEPREFIX/moboxmeta/services-fix-applied ]; then
echo "\033[92m–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ\033[0m \033[36m—Ñ—É–Ω–∫—Ü–∏–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è\033[0m"
	taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine regedit $PREFIX/glibc/opt/prefix/fix-services.reg &>/dev/null
	sleep 5
	$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
	touch $WINEPREFIX/moboxmeta/services-fix-applied
fi
if [ ! -f $WINEPREFIX/moboxmeta/fonts-fix-applied ]; then
echo "\033[92m–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ\033[0m \033[36m–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à—Ä–∏—Ñ—Ç–æ–≤\033[0m"
	tar -xf $PREFIX/glibc/opt/prefix/fix-fonts.tar.xz -C $WINEPREFIX/drive_c/windows
	touch $WINEPREFIX/moboxmeta/fonts-fix-applied
fi
if [ ! -f $WINEPREFIX/moboxmeta/dxdlls-fix-applied ]; then
echo "\033[92m–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ\033[0m \033[36m–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è DLL\033[0m"	7z x $PREFIX/glibc/opt/prefix/directx.7z -o$WINEPREFIX/drive_c -y &>/dev/null
	taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine regedit $PREFIX/glibc/opt/prefix/user.reg &>/dev/null
	sleep 5
	$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
	touch $WINEPREFIX/moboxmeta/dxdlls-fix-applied
fi
load_configs
ln -sf $(df -H | grep -o "/storage/....-....") "$WINEPREFIX/dosdevices/f:" &>/dev/null

DISPLAY=:1 taskset -c $SEC_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,$RESOLUTION_WOW start /min /unix $PREFIX/glibc/bin/ib.exe &>/dev/null &
DISPLAY=:0 LC_ALL=$LANG_BOX taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,$RESOLUTION_WOW start /min /unix $PREFIX/mobox/wfm.exe &>$LOG_PATH 2>&1 &
DISPLAY=:0 taskset -c $SEC_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,$RESOLUTION_WOW start /min /unix $PREFIX/glibc/opt/apps/f5taskmgr.exe &>/dev/null &
if [ "$STARTUP_WINEDEVICE_MODE" = "0" ]; then
	$GLIBC_BIN/box64 $GLIBC_BIN/wine taskkill /f /im services.exe &>/dev/null &
fi
if ps aux | grep -v grep | grep -q "wine"
then
sleep 10
pkill feh &>/dev/null &
fi
sleep 1
if [ $DXVK_x64 != $DXVK_WOW ]; then
DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\d3d && start Z:\\usr\\glibc\\opt\\prefix\\d3d\\"${DXVK_WOW%.*}".bat" &>/dev/null
sed -i "45s/.*/DXVK_x64=$DXVK_WOW/" "$hom_64"
fi
if [ $TURNIP_x64 != $TURNIP_WOW ]; then
DISPLAY=:0 taskset -c $PRIM_COR_WOW $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,640x480 cmd /c "cd Z:\\usr\\glibc\\opt\\prefix\\mesa && start Z:\\usr\\glibc\\opt\\prefix\\mesa\\"${TURNIP_WOW%.*}".bat" &>/dev/null
sed -i "46s/.*/TURNIP_x64=$TURNIP_WOW/" "$hom_64"
fi
REBOOT=0
LAST_SERVICES_WOW=${LAST_SERVICES_WOW:-1}
GAME_SHORT="${GAME%.lnk}"

while true; do
strech="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —à–∏—Ä–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞ $STRETCH_WOW"
if [ "$STRETCH_WOW" = "–ù–µ —Ä–∞—Å—Ç—è–Ω—É—Ç–æ" ]; then
    NAME="–†–∞—Å—Ç—è–Ω—É—Ç—å –ø–æ —à–∏—Ä–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞"
else
    NAME="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞"
fi
wer=$(dialog --no-shadow \
--title "${GAME}" --default-item "$LAST_SERVICES_WOW" --menu \
"\n
–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Mobox WoW64\n
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n
$turnip_n_wow\n
$dxvk_n_wow\n
$box_n_wow\n
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n
$turnip_wow\n
$dxvk_wow\n
$box_wow\n
$version_wow\n
$limit_DX\n
$resolution\n
$strech\n
$cores\n
$limit_fps\n
$dri_3\n
$servic\n" 27 45 4 \
    "1" "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É ${GAME_SHORT}" \
    "2" "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å ${GAME_SHORT}" \
    "3" "$NAME" 2>&1 >/dev/tty)
case $? in
    1) source "$HOME/.shortcuts/,/Mobox WoW64" & ;;
esac  
LAST_SERVICES_WOW=$wer
case $wer in
    1) 
        $GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null &
        break
        ;;
    2) 
		$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
		break & exec bash -c ". \"$HOME/.shortcuts/,/Mobox WoW64\""
        ;;
    3) 
        if [ "$STRETCH_WOW" = "–ù–µ —Ä–∞—Å—Ç—è–Ω—É—Ç–æ" ]; then
        STRETCH_WOW="–†–∞—Å—Ç—è–Ω—É—Ç–æ"
        source "$HOME/.shortcuts/${GAME%.lnk}" &
        termux-x11-preference displayStretch:true
        NAME="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞"
        sed -i "83s/.*/STRETCH_WOW_eng=\"Stretched\"/" "${hom_game}"
        sed -i "37s/.*/STRETCH_WOW=\"–†–∞—Å—Ç—è–Ω—É—Ç–æ\"/" "${hom_game}"
        sed -i '36s/.*/displayStretch=true/' "${hom_game}"
    else
        STRETCH_WOW="–ù–µ —Ä–∞—Å—Ç—è–Ω—É—Ç–æ"
        source "$HOME/.shortcuts/${GAME%.lnk}" &
        termux-x11-preference displayStretch:false
        NAME="–†–∞—Å—Ç—è–Ω—É—Ç—å –ø–æ —à–∏—Ä–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞"
        sed -i "83s/.*/STRETCH_WOW_eng=\"Not stretched\"/" "${hom_game}"
        sed -i "37s/.*/STRETCH_WOW=\"–ù–µ —Ä–∞—Å—Ç—è–Ω—É—Ç–æ\"/" "${hom_game}"
        sed -i '36s/.*/displayStretch=false/' "${hom_game}"
    fi
        ;;
esac
if [ -e $PREFIX/glibc/opt/shutdown ]; then
	rm -rf $PREFIX/glibc/opt/shutdown
	$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
	break
fi
if [ -e $PREFIX/glibc/opt/reboot ]; then
	rm -rf $PREFIX/glibc/opt/reboot
	$GLIBC_BIN/box64 $GLIBC_BIN/wineserver -k &>/dev/null
	REBOOT=1
	break
fi
done
am broadcast -a com.termux.x11.ACTION_STOP -p com.termux.x11 &>/dev/null
export LD_PRELOAD=/data/data/com.termux/files/usr/lib/libtermux-exec.so
pkill -f inotifywait &>/dev/null
pkill -f Xnoimage-dex2oat &>/dev/null
stop-all
if [ "$REBOOT" = "1" ]; then
	exec $0
fi
fi
fi
}
